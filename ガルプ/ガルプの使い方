ガルプの使い方


https://ics.media/entry/3290/3
-----------------------------------------
1. Node.jsをインストール
Gulpを使うためにはNode.jsが必要!
公式サイトに行ってインストール　アクセスの時期によってバージョンに違いがあり！

公式サイト
https://nodejs.org/en/

ダウンロード→インストール→コマンドプロンプト

「node -v」
と実行し、Nodeのバージョンが表示されていればインストール成功

-----------------------------------------


2.2.Gulpをグローバルにインストール

コマンドプロンプト
「npm install -g gulp-cli」

インストール→gulp -vと入力してバージョンが表示されたらOK!

-----------------------------------------
3. package.jsonファイルの作成
Webサイトのファイル一式が保存されるフォルダー（以下、プロジェクトフォルダーと呼びます）を任意の場所に作成し、コマンドラインでその場所に移動


Windowsでのフォルダーの移動の注意！
cd　→これはチェンジディレクトリの意味で、最初に自分でキーボードで入力しなければいけない！
※書いてないので注意！

「ｃｄ　C:¥Users¥MyName¥myproject」
※C:¥Users¥MyName¥myprojectに関してはフォルダ作ってコマンドプロンプトにドラック＆ドロップでもいける！

それが出来たら表示が”場所が変わっているという表示”になるので、そこで「npm init」とやる！

できたら「package.json」ができている！

-----------------------------------------
4.
Gulpを実行する為に、Gulp本体をローカル環境に（プロジェクトフォルダー以下で使えるように）インストール
グローバル環境にはステップ2でインストール済ですが、ローカル環境にもインストールする必要があります。

npm install --save-dev gulp

-----------------------------------------
-----------------------------------------

ここから使い方


プロジェクトファイル直下にgulpfile.jsというファイルを作成する必要があります。

gulpfile.js

名前を付けて保存で、プロジェクトファイルの中に作る！

↓ソース
// gulpプラグインの読みこみ
var gulp = require('gulp');
// 画像を圧縮するプラグインの読み込み
var imagemin = require("gulp-imagemin");
gulp.task("imageMinTask", function() { // 「imageMinTask」という名前のタスクを登録
  gulp.src("images/*.png")    // imagesフォルダー以下のpng画像を取得
    .pipe(imagemin())   // 画像の圧縮処理を実行
    .pipe(gulp.dest("minified_images/"));   // minified_imagesフォルダー以下に保存
});

-----------------------------------------
-----------------------------------------
//解説
gulp.task("タスク名", 実行される処理)
タスクを作成します。タスク名と、実際に行われる処理を記述します。
require("プラグイン名")
使用するプラグインを読み込みます。
gulp.src("取得するファイル")
タスクの対象となるファイルを取得します。ファイルは複数ファイルの指定も可能です。
pipe()
一つ一つの処理をつなげます。例えば前述のコードでは、src()で取得した画像を圧縮し、それをgulp.dest()で書き出しています。pipe()メソッドはいくらでもつなげることができるので、連続した複数の処理を実装できます。
gulp.dest("保存先フォルダー")
処理を行ったファイルを指定の場所に保存します

-----------------------------------------
-----------------------------------------


// gulpプラグインの読みこみ
var gulp = require('gulp');
gulp.task('hello',function(){
	console.log("hellothanks");
});

※コマンドプロンプト
gulp task名今回の場合はhello


フォルダについて
プロジェクトファイルの直下＝プロジェクトファイルの中に作ってOK!


そこに

// gulpプラグインの読みこみ
var gulp = require('gulp');
// 画像を圧縮するプラグインの読み込み
var imagemin = require("gulp-imagemin");
gulp.task("imageMinTask", function() { // 「imageMinTask」という名前のタスクを登録
  gulp.src("html/images/*.png")    // imagesフォルダー以下のpng画像を取得
    .pipe(imagemin())   // 画像の圧縮処理を実行
    .pipe(gulp.dest("html/minified_images/"));   // minified_imagesフォルダー以下に保存
});


を使うとしたら
まずフォルダを作る必要がある！
「html/images/」
これはhtml→の中のimagesフォルダを指している

プロジェクトファイルの中にそれを作ってやればOK!


プロジェクトごとに管理しておくと、すごく楽にできるので覚えておく！

例えば、ブラニューのサイトだけの場合はそれでぱっけーじJSON、プロジェクトファイルから作っていくということ！


・ポイント・
gulp.task(“タスク名”,function() {});でタスクの登録をおこないます。

gulp.src(“MiniMatchパターン”)で読み出したいファイルを指定します。

pipe(おこないたい処理)でsrcで取得したファイルに処理を施します

gulp.dest(“出力先”)で出力先に処理を施したファイルを出力します。



//便利なライブラリ＝jquery　これを追加すれば機能が使えるようになる！[node_modules]に勝手に追加されるもの！よってコピペで追加しておく

Sassをコンパイル
npm install gulp-sass --save-dev

ベンダープレフィックス付与を自動化
npm install gulp-autoprefixer --save-dev

ファイルの監視
※これはインストールなしで、gulpfile.jsに書くだけ！
gulp.task("default", function() {
    gulp.watch(["js/**/*.js","!js/min/**/*.js"],["js"]);
    gulp.watch("sass/**/*.scss",["sass"]);
});


エラー時にwatchを止めない
npm install gulp-plumber --save-dev

※Gulpには1つ弱点
SCSSを誤った状態で保存すると監視状態が解除されてしまう、
なので、これを入れて監視を止めないようにしておく！


